// Using methods with each step broken down

function FirstReverse(str) { 

  // First, we need to use .split to change the string into an array so it can be further manipulated.
  // Passing "" (an empty string) into the method splits the string at every character.
  
  str = str.split(""); 
  
  // Next, we use the reverse method to reverse the order of the elements in our newly formed array.
  // Note that .reverse only works on arrays (which is why we had to use .split).
  
  str = str.reverse(); 
  
  // Finally, we use the .join method to patch our array back together and return a string. 
  // Passing an empty string here means that nothing gets inserted between each array element. 
  
  str = str.join(""); 
  
  return str;

}

// A more elegant version of solution one

function FirstReverse(str) { 
  
  return str.split("").reverse().join("");

}

// A "methodless" solution using a for loop

function FirstReverse(str) { 
  
  // Declare an empty string to hold the output of our for loop
  
  answer = "";
  
  // Next we set up a loop that will start at the end of the string and iterate backwards through it.
  // As we're moving backwards through the string, we use i-- to decrease i until it reaches 0.
  
  for (i=str.length-1;i>=0;i--) {
  
  // Each pass will add the letter at position i to the empty string we declared earlier.
  
  answer += str[i];
  
  }
  
  return answer;

}
